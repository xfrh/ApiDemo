@page "/CoNav"
@attribute [Authorize(Roles="Admin,User")]
@using ApiDemoApp.Models
@using System.Text.Json
@using ApiDemoApp.Services
@using System.Text
@inject IHttpClientFactory _clientFactory;


<h3>Send Coordinate Navigation</h3>

    <p>
       <label>x 坐标:</label> <input type="number" @bind-value="@x" placeholder="x 坐标" />
    </p>
    <p>
       <label>y 坐标:</label> <input type ="number" @bind-value ="@y"  placeholder="y 坐标"/>
    </p>
    <p>
      <label>&nbsp;&nbsp;弧度:</label>  <input type="number" @bind-value="@theta" placeholder="弧度" />
    </p>
    <p>
        <input type="button" value="提交" @onclick="StartNav" />
        <input type="button" value="取消" @onclick="CancelNav" />
    </p>
    <p>
        <label>@erroMessage</label>
    </p>

@code {
    string? erroMessage;
    double x;
    double y;
    double theta;
    public async Task StartNav()
    {
        var client = _clientFactory.CreateClient("cmd");
        try
        {
            Coordinace coordinace = new Coordinace()
                  {
                    x = this.x,
                    y = this.y,
                    theta =this.theta
                  };
         //   var result =await client.PostAsJsonAsync<string>("nav", JsonSerializer.Serialize(coordinace));
            var stringPayload = JsonSerializer.Serialize(coordinace);
            var httpContent = new StringContent(stringPayload, Encoding.UTF8, "application/json");
            var httpResponse = await client.PostAsync("nav", httpContent);
            if (httpResponse.StatusCode == System.Net.HttpStatusCode.OK)
            {
                erroMessage = "Nav data correctly received";
            }
            else
            {
                erroMessage = await httpResponse.Content.ReadAsStringAsync();
                LogService.LogMessage(erroMessage);
            }

        }catch(Exception ex)
        {
            erroMessage = ex.Message;
            LogService.LogMessage(ex.Message);
        }
    }

    public async Task CancelNav()
    {
        var client = _clientFactory.CreateClient("cmd");
        try
        {
            var result = await client.PostAsJsonAsync("cancel_goal", string.Empty);
            if (result.StatusCode == System.Net.HttpStatusCode.OK)
                erroMessage = "correctly cancel the naviagtion";
            else
                erroMessage = " something wrong with server,try again";

        }catch(Exception ex)
        {
            erroMessage = ex.Message;
        }
    }

}
