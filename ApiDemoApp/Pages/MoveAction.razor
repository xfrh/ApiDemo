@page "/moveAction"
@attribute [Authorize(Roles="Admin")]
@using ApiDemoApp.Models
@using System.Text.Json
@using ApiDemoApp.Services
@using System.Text
@inject IHttpClientFactory _client

<h3>Move...</h3>
<p>
    <label>&nbsp;Vx:</label>
    <input type="number" placeholder="直行速度" @bind-value="@vx" required />

</p>
<p>
    <label>Vth:</label>
    <input type="number" placeholder="转动角度" @bind-value="@vth" required />
</p>

<p>
    <input type="button" value="提交" @onclick="StartMove" />
</p>
<p><label>@errorMessage</label></p>

@code {
    string? errorMessage;
    string? vx;
    string? vth;

    public async Task StartMove()
    {
        var client = _client.CreateClient("cmd");
        try
        {
            Move move = new Move() { vx =double.Parse(this.vx), vth =double.Parse(this.vth) };
            //var result = await client.PostAsJsonAsync<string>("speed", JsonSerializer.Serialize(move));
            var stringPayload = JsonSerializer.Serialize(move);
            var httpContent = new StringContent(stringPayload, Encoding.UTF8, "application/json");
            var httpResponse = await client.PostAsync("speed", httpContent);
            if (httpResponse.StatusCode == System.Net.HttpStatusCode.OK)
            {
                errorMessage = "Nav data correctly received";
            }
            else
            {
                errorMessage = await httpResponse.Content.ReadAsStringAsync();
                LogService.LogMessage(errorMessage);
            }
            
            


        }catch(Exception ex)
        {
            errorMessage = ex.Message;
            LogService.LogMessage(ex.Message);
        }
    }
 


}
